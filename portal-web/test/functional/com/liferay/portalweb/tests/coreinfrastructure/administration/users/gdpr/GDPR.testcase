@component-name = "portal-user-management-and-portal-configuration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Users and Organizations";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "userea@liferay.com");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.tearDownCP();

			BlogsEntry.tearDownCP();
		}
	}

	@priority = "4"
	test AnonymizeAllEntries {
		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.openURL();

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "DM Document Title");

		MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "guest");

		MessageboardsThread.addCP(
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Wiki");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiNavigator.gotoAllPagesCP();

		WikiPage.addCP(
			wikiPageContent = "Wiki Page Content",
			wikiPageTitle = "Wiki Page Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.deletePersonalDataCP(
			userFirstName = "userfn",
			userLastName = "userln");

		GDPR.anonymizeDataViaReviewData(allApplications = "true");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		BlogsEntry.viewEntryTable(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryAuthorCP(
			entryAuthorFullName = "Anonymous Anonymous",
			entryTitle = "Blogs Entry Title");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.expandInfo();

		AssertTextEquals(
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_INFO_UPLOADED_BY",
			value1 = "Anonymous Anonymous");

		MessageBoardsAdmin.openMessageBoardsAdmin(siteURLKey = "guest");

		MessageboardsThread.gotoPG(
			lastPostUserName = "Anonymous Anonymous",
			replyCount = "0",
			threadBody = "MB Thread Message Body",
			threadSubject = "MB Thread Message Subject");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Wiki");

		WikiNavigator.gotoNode(wikiNodeName = "Main");

		WikiNavigator.gotoAllPagesCP();

		var key_wikiPageTitle = "Wiki Page Title";
		var key_wikiPageUsername = "Anonymous Anonymous"

		AssertTextEquals(
			locator1 = "WikiTable#ALL_PAGES_USER",
			value1 = "Anonymous Anonymous");
	}

	@priority = "5"
	test DeleteEntryFromApplication {
		property portal.acceptance = "true";

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		Blogs.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		ProductMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.deletePersonalDataCP(
			userFirstName = "userfn",
			userLastName = "userln");

		GDPR.deleteEntryFromApplicationCP(
			applications = "Blogs",
			itemsCount = "1",
			rowEntry = "Blogs Entry Title");

		GDPR.viewNoEntryInApplicationCP(applications = "Blogs");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		LexiconEntry.viewNoEntry(rowEntry = "Blogs Entry Title");
	}

}