diff --git a/bobo-browse/src/main/java/com/browseengine/bobo/sort/DocComparatorSource.java b/bobo-browse/src/main/java/com/browseengine/bobo/sort/DocComparatorSource.java
index 2ad990b..80f4895 100644
--- a/bobo-browse/src/main/java/com/browseengine/bobo/sort/DocComparatorSource.java
+++ b/bobo-browse/src/main/java/com/browseengine/bobo/sort/DocComparatorSource.java
@@ -1,6 +1,7 @@
 package com.browseengine.bobo.sort;
 
 import java.io.IOException;
+import java.io.Serializable;
 import java.text.Collator;
 import java.util.Locale;
 
@@ -83,8 +84,40 @@ public abstract class DocComparatorSource {
 				    return _collator.compare(values[doc1.doc], values[doc2.doc]);
 				}
 
-				public String value(ScoreDoc doc) {
-					return values[doc.doc];
+				public StringLocaleComparable value(ScoreDoc doc) {
+					return new StringLocaleComparable(values[doc.doc], _collator);
+				}
+				
+				class StringLocaleComparable implements Comparable, Serializable {
+					
+					private final String _value;
+					private final Collator _collator;
+					
+					private static final long serialVersionUID = 1L;
+					
+					public StringLocaleComparable(String value, Collator collator) {
+						_value = value;
+						_collator = collator;
+					}
+
+					@Override
+					public int compareTo(Object o) {
+						if (o instanceof StringLocaleComparable){
+							StringLocaleComparable other = (StringLocaleComparable) o;
+						    if (_value == null) {
+							      if (other._value == null) {
+							        return 0;
+							      }
+							      return -1;
+							    } else if (other._value == null) {
+							      return 1;
+							    }				   
+							    return _collator.compare(_value, other._value);
+						}
+						else{
+							throw new IllegalStateException("expected instance of " + StringLocaleComparable.class);
+						}
+					}
 				}
 			};
 		}
